#include<iostream>
#include<cstring>
#include<ctime>

using namespace std;
/*


//对象的初始化和清理
//构造函数和析构函数




class Person
{
public://构造函数前面必须是public作用域, 这样才能访问的到构造函数
	//构造函数语法: 类名(){}
	//1, 构造函数, 没有返回值也不写void
	//2, 函数名称与类名相同
	//3, 构造函数可以由参数, 因此可以发生重载
	//4, 程序在调用对象时候会自动调用构造, 无须手动调用, 而且只会调用一次
	Person()
	{
		cout << "Person的构造函数的调用" << endl;
	}
	//析构函数语法: ~类名(){}
	//1, 构造函数, 没有返回值也不写void
	//2, 函数名称与类名相同, 在名称前加上符号~
	//3, 析构函数不可以有参数, 因此不可以发生重载
	//4, 程序在对象销毁前会自动调用析构, 无须手工调用, 而且只会调用一次
	~Person()
	{
		cout << "Person的析构函数的调用" << endl;
	}


};

//析构和构造都是必须有的实现, 如果我们不自己提供, 编译器会提供一个空实现的构造和析构函数
void test01()
{
	Person p;//在栈区的数据, test01执行完毕后, 释放这个对象
}

int main() {
	//即调用构造函数, 又调用析构函数
	test01();
	//只调用构造函数, 在main函数执行完成之后才调用析构函数
	//Person p;
	system("pause");
	return 0;
}
*/